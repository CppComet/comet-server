<rst>EN::004-Administration::005-Configuring the comet.ini file</rst> 

====== Configuring the comet.ini file ======

 * Parameters can be specified in any order.
 * Register is important
 * The comment begins with the `;`
 
====== Section [main] ======
 
Password for access from cometQL
<code>password = 0000000000000000000000000000000000000000000000000000000000000000</code>

The maximum size of the buffer in bytes for working with messages
<code>buf_size = 10384</code>

Buffer size in bytes for storing fragmented messages
<code>fragment_buf_size = 600</code>

The maximum size of the fragmented messages storage buffer
<code>fragment_buf_max_size = 10384</code>

To output in a log queries coming through cometQL
<code>useQueryLoger = false</code>

The maximum size of the buffer to respond to a request
<code>answer_buf_size = 1000000</code>

The comet server can give out static files. By default, this feature is disabled. But if you set the parameter base_dir, then it starts to give files by name from this directory as a primitive http server. Supports only get requests. In the [content-type] section, you can set the extension to the content-type header
<code>base_dir = /var/www/html</code>
====== Section [statistics] ======

In the comet server, there is a mechanism to collect usage statistics and send them to the developer server (For what and what data is sent, see http://statistics.comet-server.ru/api/statistics )
To disable sending statistics, set the value to false
<code>allow = true</code>

====== Section [db] ======
Connecting to mysql
<code>host = localhost
user = root
password = root
name = comet_db
port = 3305</code>

====== Section [ws] ======
ip address for receiving connections from websockets
<code>ip = 0.0.0.0</code>

The number of streams into which connections from Web sites are processed, each thread increases the total memory consumption by approximately 10 - 15 mb so that for a low-loaded configuration one can call 1 stream
<code>thread_num = 4</code>

The comet server takes into account the number of online connections and the number of network events, it is the interval in seconds between the measurements that the value 0 does not measure
<code>statistics = 10</code>

Port for listening to connections on websockets
<code>port = 8087</code>

The interval in seconds to check uptime for connections, 0 do not run the check
<code>uptimeTestInterval = 600</code>

The maximum uptime connection after which the connection is terminated forcibly
<code>maxUptime = 0</code>

A comma-separated list of hosts from which it is allowed to connect from javascript api (checked based on the http header), there is no limit by default
<code>host = *</code>

====== Section [cometql] ======
<code>ip = 0.0.0.0 
thread_num = 3 ; number of threads for receive message from cometql
statistics = 10
port = 3300
uptimeTestInterval = 600  
maxUptime = 0  </code>
  
====== Section [content-type] ======  

Allows you to set the content-type and file type.
For example:
<code>js = text/javascript
css = text/css</code>
====== Section [log] ======
Setting the Logging Level The higher the number the more logs are added.
  * 0 - do not output
  * 100 - Critical Errors
  * 200 errors
  * 300 - Warnings
  * 400 - log
  * 500 - debugging mode

The parameter sets the maximum level of logging common for all subsystems
<code>level = 200; </code>
 
Logging levels for individual subsystems, in order to be able to watch the log separately for different events, is used for debugging convenience
<code>Any = 500</code>

Events from class logger
<code>TagLoger = 500</code>

Class storage events
<code>appConf  = 500</code>

Events from the interaction class via pipe (in the operating system)
<code>pipeCommands = 500</code>

Statistics module
<code>statistics = 500</code>

Disabling overtime connections
<code>removeOldConnections = 500</code>

Working with mysql
<code>MySqlServer = 500</code>

Class of work with user data (authorization, the last time online)
<code>UserIndex = 500</code>

User class (authorization, last online time)
<code>UserItem = 500</code>

Working with websockets
<code>ClientServer = 500</code>

Outdated section with php api
<code>ServerServer = 500</code>

Working with radishes (obsolete section)
<code>SimpleRedisClient = 500</code>

Reception and distribution of network connections
<code>tcpServer = 500</code>

Blanks of clustering are not all ready
<code>CometQLCluster = 500</code>

Working with authorization from cometql connections
<code>devManager = 500</code>

Sending requests to the mysql database
<code>dbLink = 500</code>
